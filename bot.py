import os
from flask import Flask, request
import requests
from dotenv import load_dotenv

load_dotenv()

app = Flask(__name__)

TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
WEBHOOK_URL = os.environ.get('WEBHOOK_URL')
FLOWISE_API_URL = os.environ.get('FLOWISE_API_URL')

TELEGRAM_API_URL = f"https://api.telegram.org/bot{TOKEN}"

def set_webhook():
    url = f"{TELEGRAM_API_URL}/setWebhook?url={WEBHOOK_URL}"
    resp = requests.get(url)
    print("Set webhook response:", resp.text)

@app.route('/')
def index():
    return "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω."

@app.route('/webhook', methods=['POST'])
def webhook():
    update = request.json
    if 'message' in update:
        chat_id = update['message']['chat']['id']
        text = update['message'].get('text', '')

        if text == '/start':
            send_message(chat_id, " ~K –ü—Ä–∏–≤–µ—Ç! –Ø AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ñ–ö–•, —à—Ç—Ä–∞—Ñ–∞–º –∏ –≥–æ—Å—É—Å–ª—É–≥–∞–º.\n\n\n–í—ã–±–µ—Ä–∏ —Ç–µ–º—É –∏–ª–∏ –∑–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.")
            send_main_buttons(chat_id)

        elif text == '/—à–∞–±–ª–æ–Ω—ã':
            send_message(chat_id, " ~D –í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã:\n\n\n1. –ñ–∞–ª–æ–±–∞ –≤ —É–ø—Ä–∞–≤–ª—è—é—â—É—é –∫–æ–º–ø–∞–Ω–∏—é\n2. –ó–∞–ø—Ä–æ—Å –≤ –ú–§–¶\n3. –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ —à—Ç—Ä–∞—Ñ—É\n\n(–≤ –±—É–¥—É—â–µ–º —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä—É—Ç–∏—Ç—å PDF/Word –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä)")

        else:
            reply = ask_flowise(text)
            send_message(chat_id, reply)

    elif 'callback_query' in update:
        query = update['callback_query']
        chat_id = query['message']['chat']['id']
        data = query['data']

        if data == 'jkh':
            send_message(chat_id, "üè† –í–æ–ø—Ä–æ—Å –ø–æ –ñ–ö–•? –ù–∞–ø–∏—à–∏ –µ–≥–æ.")
        elif data == 'fines':
            send_message(chat_id, "üí∏ –í–æ–ø—Ä–æ—Å –ø–æ —à—Ç—Ä–∞—Ñ–∞–º? –ù–∞–ø–∏—à–∏ –µ–≥–æ.")
        elif data == 'gosuslugi':
            send_message(chat_id, "üõÇ –ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø–æ –ì–æ—Å—É—Å–ª—É–≥–∞–º? –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å.")

    return {'ok': True}

def send_main_buttons(chat_id):
    keyboard = {
        "inline_keyboard": [
            [{"text": "üè† –ñ–ö–•", "callback_data": "jkh"}],
            [{"text": "üí∏ –®—Ç—Ä–∞—Ñ—ã", "callback_data": "fines"}],
            [{"text": "üõÇ –ì–æ—Å—É—Å–ª—É–≥–∏", "callback_data": "gosuslugi"}]
        ]
    }
    url = f"{TELEGRAM_API_URL}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:",
        "reply_markup": keyboard
    }
    requests.post(url, json=payload)

def send_message(chat_id, text):
    url = f"{TELEGRAM_API_URL}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": text
    }
    requests.post(url, json=payload)

def ask_flowise(question):
    headers = {"Content-Type": "application/json"}
    payload = {"question": question}
    response = requests.post(FLOWISE_API_URL, json=payload, headers=headers)
    if response.status_code == 200:
        return response.json().get('text', '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç Flowise.')
    return '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Flowise.'
